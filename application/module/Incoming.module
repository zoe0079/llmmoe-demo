<?php
/**
 * Created by PhpStorm.
 * User: llmmoe
 * Date: 2018/3/6
 * Time: 15:36
 */

namespace app\module;
include_once 'staff.module';

/**
 * Class Incoming
 * @package app\module
 */
class Incoming extends \sys\lib\Module {
    private $staff;

    /**
     * Incoming constructor.
     * @throws \Exception
     */
    function __construct() {
        parent::__construct();
        $this->staff = new \app\module\staff();
    }

    /**
     * @param array $data
     * @throws \Exception
     */
    function add(array $data) {
        $data['createtime'] = date('Y-m-d H-i-s');
        $this->db->query($this->sql->insert("incoming", $data));
    }

    /**
     * @param array $data
     * @throws \Exception
     */
    function update(array $data) {
        if(isset($data['id'])) {
            $id = $data['id'];
            unset($data['id']);
        }
        $sql = $this->sql->update('incoming', $data, array("id"=>$id))->where('id', '=', $id);
        $this->db->query($sql);
    }

    /**
     * @return array|bool|\mysqli_result
     * @throws \Exception
     */
    function getList() {
        $sql = 'select incoming.*,staff.name as receive from ganxi.incoming, ganxi.staff WHERE incoming.receiveID = staff.id ORDER BY date DESC, time DESC';
        $result = $this->db->query($sql);
        foreach($result as $k => $value) {
            if(isset($value['handleID']) and !empty($value['handleID'])) {
                $temp = null;
                $temp = $this->staff->find(array('id'=>$value['handleID']));
                $result[$k]['handle'] = (isset($temp) and !empty($temp)) ? $temp[0]['name'] : null;
            }
        }
        return $result;
    }

    /**
     * @param $id
     * @throws \Exception
     */
    function del($id) {
        $this->db->query($this->sql->delete('incoming')->where('id', '=', $id));
    }

    /**
     * @param null $data
     * @param string $table
     * @return array
     * @throws \Exception
     */
    function find($data = null, $table = 'incoming') {
        $result = parent::find($data, $table); // TODO: Change the autogenerated stub
        if(!isset($result[0]) or empty($result)) throw new Exception('The Date What You Find is NOT Exist!');
        $result[0]['receive'] = $this->staff->find(array('id'=>$result[0]['receiveID']))[0]['name'];
        $result[0]['handle'] = $this->staff->find(array('id'=>$result[0]['handleID']))[0]['name'];
        return $result;
    }
}